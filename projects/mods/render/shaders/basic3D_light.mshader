#msh_vertex
#version 330

layout (location = 0) in vec3 a_Position;
layout (location = 1) in vec4 a_Color;
layout (location = 3) in vec3 a_Normal;

uniform mat4 u_Projection;
uniform mat4 u_ModelView;
uniform mat4 u_NormalMatrix;

smooth out vec4 v_Color;
smooth out vec3 v_Normal;

void main()
{
	gl_Position = u_Projection * u_ModelView * vec4(a_Position, 1.0);
	v_Color = a_Color;
	v_Normal = (u_NormalMatrix * vec4(a_Normal, 1.0)).xyz;
}

#msh_fragment
#version 330

uniform vec3 u_LightColor;
uniform vec3 u_LightDirection;
uniform float u_LightAmbientIntensity;

smooth in vec4 v_Color;
smooth in vec3 v_Normal;

out vec4 out_Color;

void main()
{
	float diffuseIntensity = max(0.0, dot(normalize(v_Normal), -u_LightDirection));
	out_Color = v_Color * vec4(u_LightColor * (u_LightAmbientIntensity + diffuseIntensity), 1.0);
	//out_Color = vec4(diffuseIntensity, diffuseIntensity, diffuseIntensity, 1.0);
	//out_Color = vec4(1.0, 0.0, 0.0, 1.0);
	//out_Color = vec4(v_Normal.xyz, 1.0);
}

